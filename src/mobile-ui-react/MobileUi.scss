/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See LICENSE.md in the project root for license terms and full copyright notice.
*--------------------------------------------------------------------------------------------*/
// The default below should be 600px.
// Using 769px will cause an ipad to be treated as a small-screen device.
$max-small-screen-size: 600px;

:root {
  --mui-fade-duration: .5s;
  /* Named colors */
  --muic-gray-1-rgb: 7,8,9;
  --muic-gray-2-rgb: 42,47,52;
  --muic-gray-3-rgb: 60,67,74;
  --muic-gray-4-rgb: 77,87,95;
  --muic-gray-5-rgb: 103,116,128;
  --muic-gray-6-rgb: 133,146,157;
  --muic-gray-7-rgb: 155,165,174;
  --muic-gray-8-rgb: 166,175,183;
  --muic-gray-9-rgb: 199,204,209;
  --muic-gray-a-rgb: 220,224,227;
  --muic-gray-b-rgb: 238,240,243;
  --muic-gray-c-rgb: 248,249,251;
  --muic-gray-1: rgb(var(--muic-gray-1-rgb));
  --muic-gray-2: rgb(var(--muic-gray-2-rgb));
  --muic-gray-3: rgb(var(--muic-gray-3-rgb));
  --muic-gray-4: rgb(var(--muic-gray-4-rgb));
  --muic-gray-5: rgb(var(--muic-gray-5-rgb));
  --muic-gray-6: rgb(var(--muic-gray-6-rgb));
  --muic-gray-7: rgb(var(--muic-gray-7-rgb));
  --muic-gray-8: rgb(var(--muic-gray-8-rgb));
  --muic-gray-9: rgb(var(--muic-gray-9-rgb));
  --muic-gray-a: rgb(var(--muic-gray-a-rgb));
  --muic-gray-b: rgb(var(--muic-gray-b-rgb));
  --muic-gray-c: rgb(var(--muic-gray-c-rgb));
  --muic-active: rgb(0,139,225);
  --muic-active-contrast: white;
  --muic-foreground-inactive: var(--muic-gray-4);
  --muic-background-tab-bar-rgb: var(--muic-gray-b-rgb);
  --muic-background-tab-bar: rgb(var(--muic-background-tab-bar-rgb));
  --muic-foreground-navigation-button: white;
  --muic-foreground-tile: rgb(41,54,69);
  --muic-background-tile: white;
  --muic-border-tile: var(--muic-gray-9);
  --muic-background-badge: rgb(247,112,108);
  --muic-foreground-badge: white;
  --muic-background-model: var(--muic-gray-a);
  --muic-foreground-success: rgb(86, 169, 28);
  --muic-foreground-suggestion: white;
  --muic-background-suggestion-rgb: var(--muic-gray-1-rgb);
  --muic-foreground-count-notification: var(--muic-gray-2);
  --muic-background-count-notification: white;
  --muic-foreground-count-notification-count: var(--muic-active-contrast);
  --muic-background-count-notification-count: var(--muic-active);
  --muic-foreground-count-notification-more: var(--muic-gray-8);
  --muic-drag-handle: rgba(0, 0, 0, 0.2);
  --muic-shadow: rgba(0, 0, 0, 0.12);
  --muic-background-rgb: 255,255,255;
  --muic-background-r: 255;
  --muic-background-g: 255;
  --muic-background-b: 255;
  --muic-background: rgb(var(--muic-background-rgb));
  --muic-foreground: black;
  --muic-foreground-2: var(--muic-gray-2);
  --muic-foreground-close-x: var(--muic-gray-5);
  --muic-light-border: var(--muic-gray-a);
  --muic-light-text: var(--muic-gray-5);
  --muic-background-accept: white;
  --muic-foreground-accept: var(--muic-gray-2);
  --muic-background-circle: var(--muic-gray-9);
  --muic-background-selected-circle: white;
  --muic-label-circle: var(--muic-gray-2);
  --muic-background-circle-default-chip: white;
  --muic-icon-circle: white;
  --muic-icon-selected-circle: black;
  --muic-disabled: var(--muic-gray-7);
  --muic-background-disabled: var(--muic-gray-a);
  --muic-warning: rgb(255, 102, 0);
  // Don't show tap highlights by default.
  -webkit-tap-highlight-color: transparent;
}

// preferred-color-scheme is set by the TypeScript code. By default it tracks
// the prefers-color-scheme @media setting, but this can be overridden to force
// the color scheme to be either light or dark, regardless of the system setting.
[preferred-color-scheme = "dark"] {
  --muic-active-contrast: var(--muic-gray-2);
  --muic-foreground-inactive: var(--muic-gray-9);
  --muic-background-tab-bar-rgb: var(--muic-gray-4-rgb);
  --muic-foreground-tile: var(--muic-gray-b);
  --muic-background-tile: var(--muic-gray-2);
  --muic-border-tile: var(--muic-gray-4);
  --muic-background-model: var(--muic-gray-2);
  --muic-foreground-suggestion: black;
  --muic-background-suggestion-rgb: var(--muic-gray-c-rgb);
  --muic-foreground-count-notification: var(--muic-gray-b);
  --muic-background-count-notification: black;
  --muic-foreground-count-notification-more: var(--muic-gray-5);
  --muic-drag-handle: rgba(255, 255, 255, 0.2);
  --muic-shadow: rgba(255, 255, 255, 0.12);
  --muic-background-r: 42;
  --muic-background-g: 47;
  --muic-background-b: 52;
  --muic-background-rgb: var(--muic-gray-2-rgb);
  --muic-foreground: white;
  --muic-foreground-2: var(--muic-gray-b);
  --muic-foreground-close-x: var(--muic-gray-8);
  --muic-light-border: var(--muic-gray-4);
  --muic-light-text: var(--muic-gray-8);
  --muic-background-accept: black;
  --muic-foreground-accept: var(--muic-gray-b);
  --muic-background-circle: var(--muic-gray-4);
  --muic-background-selected-circle: black;
  --muic-label-circle: var(--muic-gray-b);
  --muic-background-circle-default-chip: black;
  --muic-icon-circle: black;
  --muic-icon-selected-circle: white;
  --muic-disabled: var(--muic-gray-6);
  --muic-background-disabled: var(--muic-gray-3);
}

body {
  background-color: var(--muic-background);
  color: var(--muic-foreground);
}

.mui-fill {
  width: 100%;
  height: 100%;
}

.mui-hidden {
  display: none;
}

.mui-faded-out {
  opacity: 0;
  transition-property: opacity;
  transition-duration: var(--mui-fade-duration);
  pointer-events: none;
}

@mixin mui-fade-gradient($direction, $r, $g, $b) {
  // See here: https://css-tricks.com/easing-linear-gradients/
  // The below comes directly from their example, which goes from fully opaque to fully transparent.
  background-image: linear-gradient(to $direction,
    rgb($r,$g,$b) 0%,
    rgba($r,$g,$b,0.738) 19%,
    rgba($r,$g,$b,0.541) 34%,
    rgba($r,$g,$b,0.382) 47%,
    rgba($r,$g,$b,0.278) 56.5%,
    rgba($r,$g,$b,0.194) 65%,
    rgba($r,$g,$b,0.126) 73%,
    rgba($r,$g,$b,0.075) 80.2%,
    rgba($r,$g,$b,0.042) 86.1%,
    rgba($r,$g,$b,0.021) 91%,
    rgba($r,$g,$b,0.008) 95.2%,
    rgba($r,$g,$b,0.002) 98.2%,
    rgba($r,$g,$b,0) 100%
  );
}

@mixin mui-navigation-background-gradient($direction: bottom) {
  @include mui-fade-gradient($direction, 0, 0, 0)
}

// The element after this needs its margin-top adjusted by -20px
.mui-panel-gradient {
  flex-shrink: 0;
  border-top: 1px solid var(--muic-gray-a);
  z-index: 1;
  left: 0px;
  // we need the gradient to extend into the left/right safe areas
  margin-left: calc(0px - var(--itm-safe-area-left));
  width: 100vw;
  height: 20px;
  &::after {
    display: block;
    content: "";
    height: 20px;
    width: 100%;
    opacity: .0384; // We don't want the opacity to be aplied to the border-top, so we put this in an ::after block.
    @include mui-fade-gradient(bottom, 0, 0, 0);
  }
}

// Disable selection in all elements except text input fields by default.
*:not(input[type=text], textarea) {
  user-select: none;
}

// Adjust position of the imodeljs icon to be outside of any safe areas and above the active tab bar (if one exists). 
// The TabBar component sets --mui-current-tab-bar-height to the proper value when it is visible.
.imodeljs-icon {
  bottom: calc(var(--mui-current-tab-bar-height) + var(--itm-safe-area-bottom) + 8px);
  left: calc(var(--itm-safe-area-left) + 8px);
}

// Sometimes when entering a nested frontstage on a phone, the icon would be in the hover state. 
// This resets the opacity to the default value (as defined in imodeljs).
.imodeljs-icon:hover {
  opacity: 0.4;
}

// Enable the opacity change on devices with hover support for its primary input.
@media (hover: hover) {
  .imodeljs-icon:hover {
    opacity: 1.0;
  }
}

.imodeljs-modal-overlay {
  height: 100vh;
}

// The "about" dialog doesn't look good with very narrow widths and on phones (especially in landscape).
// These adjustments ensure the dialog isn't too tall or too wide.
.imodeljs-modal-overlay .imodeljs-modal {
  width: unset !important; // resets the width hard-coded by iModelJs
  // The dialog is centered on the screen so determine uniform left/right and top/bottom insets
  --width-border: max(var(--itm-safe-area-left), var(--itm-safe-area-right), 16px);
  --height-border: max(var(--itm-safe-area-top), var(--itm-safe-area-bottom), 16px);
  // Don't go wider than 460px (the hard-coded width set by iModelJs code)
  // The SCSS compiler has a bug that causes it to not allow min/max calls with differing units (pixels and percent,
  // for example). By storing the min() call in a variable, it avoids that bug.
  --calculated-max-width: min(100% - 2 * var(--width-border), 460px);
  max-width: var(--calculated-max-width);
  max-height: calc(100% - (2 * var(--height-border)));
  overflow: auto; // make it vertically scrollable
}

// With narrow width, reduce the space around the logo icons
@media (max-width: $max-small-screen-size) {
  .logo-card-logo {
    width: 90px;
  }
}

// With short height (phone in landscape), make further adjustments.
@media (max-height: $max-small-screen-size) {
  .imodeljs-modal-overlay .imodeljs-modal {
    // Make the dialog wider and unlike above, don't clamp the width to a fixed max.
    max-width: calc(100% - (2 * var(--width-border)));

    // Reduce the space between rows
    .logo-card-message p {
      margin-block-end: 1em;
    }

    // Ensure there's space after the last row
    .logo-cards {
      margin-bottom: 2em;
    }
  }
}

// The iui-body class gets assigned to the body element, and sets line-height to 22px.
// This prevents correct layout of ALL text that isn't the default font size. The below
// settings provide a better result. They are based on the discussion in the following
// web page:
// https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
.iui-body {
  line-height: calc(6px + 1em);
}

.iui-body * {
  line-height: calc(6px + 1em);
}
